{"version":3,"sources":["context/types/UserTypes.tsx","context/reducers/UserReducer.tsx","context/context.tsx","components/Home/Home.tsx","components/Events/EventSearch/EventSearch.tsx","components/Events/EventFilter/EventFilter.tsx","components/Events/EventCard/EventCard.tsx","components/Events/Events.tsx","components/Login/Login.tsx","context/actions/UserActions.tsx","components/SideNav/SideNav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserActions","userReducer","state","action","type","LOGIN_USER","payload","LOGOUT_USER","username","email","profilePic","initialState","user","AppContext","createContext","dispatch","mainReducer","AppProvider","children","useReducer","Provider","value","Home","useContext","className","id","style","backgroundImage","EventSearch","searchValue","setSearchValue","name","placeholder","onChange","event","target","required","EventFilter","imgUrl","color","isSelected","setSelectedFilter","width","onClick","generateEventTypeText","EventCard","eventsMap","presenterImgs","speakers","map","speaker","OverlayTrigger","placement","delay","show","hide","transition","overlay","Tooltip","profile_pic","src","alt","event_type","slice","uuidv4","relatedPills","related_events","get","DateTime","fromMillis","start_time","monthShort","toUpperCase","day","toLocaleString","TIME_SIMPLE","end_time","description","Button","variant","href","public_url","private_url","Events","useState","selectedFilter","events","setEvents","eventCards","setEventCards","Map","setEventsMap","isLoading","setIsLoading","useEffect","fetch","EVENTS_ENDPOINT","headers","then","res","json","data","forEach","prevState","set","filter","permission","sort","a","b","catch","toLowerCase","includes","item","filters","Spinner","animation","role","length","height","mockCredentials","Login","history","useHistory","password","setUser","loginError","setLoginError","handleChange","onSubmit","preventDefault","loginUser","push","SideNav","location","useLocation","to","pathname","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e8b655c.chunk.js","sourcesContent":["type UserType = \"hacker\" | \"mentor\" | \"public\" | \"admin\";\r\n\r\nexport type TUserState = {\r\n  username: string;\r\n  email: string;\r\n  type: UserType;\r\n  profilePic: string;\r\n};\r\n\r\nexport enum UserActions {\r\n  LOGIN_USER = \"LOGIN_USER\",\r\n  LOGOUT_USER = \"LOGOUT_USER\",\r\n}\r\n\r\nexport type TUserActions = {\r\n  type: UserActions;\r\n  payload?: any;\r\n};\r\n","import { TUserState, UserActions, TUserActions } from \"../types/UserTypes\";\r\n\r\nexport const userReducer = (state: TUserState, action: TUserActions) => {\r\n  switch (action.type) {\r\n    case UserActions.LOGIN_USER:\r\n      return { ...action.payload };\r\n    case UserActions.LOGOUT_USER:\r\n      return {\r\n        username: \"Guest Hacker\",\r\n        email: \"\",\r\n        type: \"public\",\r\n        profilePic: \"./default_pfp.svg\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { TUserState } from \"./types/UserTypes\";\r\nimport { userReducer } from \"./reducers/UserReducer\";\r\n\r\ntype TStore = {\r\n  user: TUserState;\r\n};\r\n\r\nconst initialState: TStore = {\r\n  user: {\r\n    username: \"Guest Hacker\",\r\n    email: \"\",\r\n    type: \"public\",\r\n    profilePic: \"./default_pfp.svg\",\r\n  },\r\n};\r\n\r\nconst AppContext = createContext<{\r\n  state: TStore;\r\n  dispatch: React.Dispatch<any>;\r\n}>({\r\n  state: initialState,\r\n  dispatch: () => null,\r\n});\r\n\r\nconst mainReducer = ({ user }: TStore, action: any): TStore => ({\r\n  user: userReducer(user, action),\r\n});\r\n\r\nconst AppProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(mainReducer, initialState);\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"../../context/context\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    state: { user },\r\n  } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"dashboard__div--page\">\r\n      <div className=\"dashboard__div--inner-container\">\r\n        <div className=\"home__div--card\">\r\n          <h1 id=\"home__h1--welcome\">\r\n            {user.type === \"public\" ? \"Hey there,\" : \"Welcome back, \"}\r\n            {user.username} 👋\r\n          </h1>\r\n        </div>\r\n        <div id=\"home__card-container\">\r\n          <div\r\n            className=\"home__card\"\r\n            style={{ backgroundImage: `url(\"./resources.svg\")` }}\r\n          >\r\n            <div className=\"home__card-body\" id=\"home__card--resources\">\r\n              Resources\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"home__card\"\r\n            style={{ backgroundImage: `url(\"./mentors.svg\")` }}\r\n          >\r\n            <div className=\"home__card-body\" id=\"home__card--mentors\">\r\n              Mentors\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"home__card\"\r\n            style={{ backgroundImage: `url(\"./faq.svg\")` }}\r\n          >\r\n            <div className=\"home__card-body\" id=\"home__card--faq\">\r\n              FAQ\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <span id=\"home__note\">Note: these cards are not yet implemented!</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","interface IEventSearchProps {\r\n  searchValue: string;\r\n  setSearchValue: (value: string) => void;\r\n}\r\n\r\nconst EventSearch: React.FC<IEventSearchProps> = ({\r\n  searchValue,\r\n  setSearchValue,\r\n}) => {\r\n  return (\r\n    <div id=\"event-search__card\">\r\n      <input\r\n        className=\"text-input\"\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Search events\"\r\n        value={searchValue}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n          setSearchValue(event.target.value)\r\n        }\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventSearch;\r\n","interface IEventFilterProps {\r\n  name: string;\r\n  imgUrl: string;\r\n  color: string;\r\n  isSelected: boolean;\r\n  setSelectedFilter: () => void;\r\n}\r\n\r\nconst EventFilter: React.FC<IEventFilterProps> = ({\r\n  name,\r\n  imgUrl,\r\n  color,\r\n  isSelected,\r\n  setSelectedFilter,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"event-filter__card\"\r\n      style={{\r\n        backgroundImage: `url(\"` + imgUrl + `\")`,\r\n        width: `${isSelected ? \"15em\" : \"10em\"}`,\r\n      }}\r\n      onClick={setSelectedFilter}\r\n    >\r\n      <div className={`event-filter__card-color ${color}`}>\r\n        {name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventFilter;\r\n","import { useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport { TEvent, TSpeaker, TEventType } from \"../../../shared/EventTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { DateTime } from \"luxon\";\r\nimport { AppContext } from \"../../../context/context\";\r\n\r\ninterface IEventCardProps {\r\n  event: TEvent;\r\n  eventsMap: Map<number, string>;\r\n}\r\n\r\nconst generateEventTypeText = (type: TEventType) => {\r\n  switch (type) {\r\n    case \"workshop\":\r\n      return <h2 className=\"event-card__event-type event-card__h2--workshop\">WORKSHOP</h2>;\r\n    case \"activity\":\r\n      return <h2 className=\"event-card__event-type event-card__h2--activity\">ACTIVITY</h2>;\r\n    case \"tech_talk\":\r\n      return (\r\n        <h2 className=\"event-card__event-type event-card__h2--tech_talk\">TECH TALK</h2>\r\n      );\r\n    default:\r\n      return <h2 className=\"event-card__event-type event-card__h2--default\">EVENT</h2>;\r\n  }\r\n};\r\n\r\nconst EventCard: React.FC<IEventCardProps> = ({ event, eventsMap }) => {\r\n  const {\r\n    state: { user },\r\n  } = useContext(AppContext);\r\n  const presenterImgs = event.speakers.map((speaker: TSpeaker) => (\r\n    <OverlayTrigger\r\n      key={uuidv4()}\r\n      placement=\"bottom\"\r\n      delay={{ show: 250, hide: 400 }}\r\n      transition={false}\r\n      overlay={\r\n        <Tooltip id=\"id\" placement=\"top\">\r\n          {speaker.name}\r\n        </Tooltip>\r\n      }\r\n    >\r\n      {speaker.profile_pic ? (\r\n        <img\r\n          src={speaker.profile_pic}\r\n          alt=\"speaker profile\"\r\n          className=\"event-card__presenter-pfp\"\r\n        />\r\n      ) : (\r\n        <div\r\n          className={`event-card__presenter-pfp event-card__default-presenter-pfp event-card__pfp-color-${event.event_type}`}\r\n        >\r\n          {speaker.name.slice(0, 1)}\r\n        </div>\r\n      )}\r\n    </OverlayTrigger>\r\n  ));\r\n\r\n  const relatedPills = event.related_events.map((id: number) => (\r\n    <div key={uuidv4()} className=\"event-card__related-pill\">\r\n      {eventsMap.get(id)}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"event-card__card\">\r\n      <div className=\"event-card__date-col\">\r\n        <div className=\"event-card__cal-container\">\r\n          <span className=\"event-card__cal-month\">\r\n            {DateTime.fromMillis(event.start_time).monthShort.toUpperCase()}\r\n          </span>\r\n          <span className=\"event-card__cal-date\">\r\n            {DateTime.fromMillis(event.start_time).day}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"event-card__details-col\">\r\n        {generateEventTypeText(event.event_type)}\r\n        <h1 className=\"event-card__title\">{event.name}</h1>\r\n        <h3 className=\"event-card__time\">\r\n          {DateTime.fromMillis(event.start_time).toLocaleString(\r\n            DateTime.TIME_SIMPLE\r\n          )}\r\n          {\" - \"}\r\n          {DateTime.fromMillis(event.end_time).toLocaleString(\r\n            DateTime.TIME_SIMPLE\r\n          )}\r\n        </h3>\r\n        <p className=\"event-card__desc\">{event.description}</p>\r\n        <p className=\"event-card__related\">Related events</p>\r\n        <div className=\"event-card__bottom-row\">{relatedPills}</div>\r\n        <div className=\"event-card__bottom-row\">\r\n          <div className=\"presenter-container\">{presenterImgs}</div>\r\n          <div className=\"event-card__attend-button-container\">\r\n            <Button\r\n              variant={event.event_type}\r\n              className=\"event-card__attend-button\"\r\n              href={\r\n                user.type === \"public\" ? event.public_url : event.private_url\r\n              }\r\n              target=\"_blank\"\r\n            >\r\n              Attend\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  TEndpointResponse,\r\n  TEvent,\r\n  TEventFilterDisplay,\r\n  TEventFilters,\r\n} from \"../../shared/EventTypes\";\r\nimport EventSearch from \"./EventSearch/EventSearch\";\r\nimport EventFilter from \"./EventFilter/EventFilter\";\r\nimport EventCard from \"./EventCard/EventCard\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { AppContext } from \"../../context/context\";\r\nimport { EVENTS_ENDPOINT } from \"../../config.json\";\r\n\r\nconst Events = () => {\r\n  const {\r\n    state: { user },\r\n  } = useContext(AppContext);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [selectedFilter, setSelectedFilter] = useState<TEventFilters>(\"all\");\r\n  const [events, setEvents] = useState<TEvent[]>([]); // Raw events data\r\n  const [eventCards, setEventCards] = useState<JSX.Element[]>([]); // EventCard components to display\r\n  const [eventsMap, setEventsMap] = useState<Map<number, string>>(new Map()); // Maps TEvent.id to TEvent.name\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Assign user-friendly names to the event types\r\n  const filterValues: TEventFilterDisplay[] = [\r\n    { name: \"All Events\", value: \"all\" },\r\n    { name: \"Workshops\", value: \"workshop\" },\r\n    { name: \"Activities\", value: \"activity\" },\r\n    { name: \"Tech Talks\", value: \"tech_talk\" },\r\n  ];\r\n\r\n  // Fetch events data\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetch(EVENTS_ENDPOINT, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data: TEndpointResponse) => {\r\n        // Create mapping to be used for displaying related events\r\n        data.data.events.forEach((event: TEvent) =>\r\n          setEventsMap((prevState: Map<number, string>) => {\r\n            prevState.set(event.id, event.name);\r\n            return prevState;\r\n          })\r\n        );\r\n\r\n        // Apply permission filters and sort by start_time\r\n        setEvents(\r\n          data.data.events\r\n            .filter(\r\n              (event: TEvent) =>\r\n                (user.type === \"public\" && event.permission === \"public\") ||\r\n                user.type !== \"public\"\r\n            )\r\n            .sort((a: TEvent, b: TEvent) =>\r\n              a.start_time > b.start_time ? 1 : -1\r\n            )\r\n        );\r\n        setIsLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, [user.type]);\r\n\r\n  // Update displayed events, filtering by event type, then search value\r\n  useEffect(() => {\r\n    setEventCards(\r\n      events\r\n        .filter(\r\n          (event: TEvent) =>\r\n            selectedFilter === \"all\" || event.event_type === selectedFilter\r\n        )\r\n        .filter(\r\n          (event: TEvent) =>\r\n            event.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            event.description?.toLowerCase().includes(searchValue.toLowerCase())\r\n        )\r\n        .map((item: TEvent) => (\r\n          <EventCard key={item.id} event={item} eventsMap={eventsMap} />\r\n        ))\r\n    );\r\n  }, [events, selectedFilter, searchValue, eventsMap]);\r\n\r\n  const filters = filterValues.map((filter: TEventFilterDisplay) => (\r\n    <EventFilter\r\n      name={filter.name}\r\n      imgUrl={`./${filter.value}.svg`}\r\n      color={`event-filter__div--${filter.value}`}\r\n      isSelected={selectedFilter === filter.value}\r\n      setSelectedFilter={() => setSelectedFilter(filter.value)}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"dashboard__div--page\">\r\n      <div className=\"dashboard__div--inner-container\">\r\n        <EventSearch\r\n          searchValue={searchValue}\r\n          setSearchValue={setSearchValue}\r\n        />\r\n        <div className=\"events__filter-container\">{filters}</div>\r\n        {isLoading ? (\r\n          <div className=\"events__container \">\r\n            <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {eventCards.length > 0 ? (\r\n              eventCards\r\n            ) : (\r\n              <div className=\"events__container\">\r\n                <img\r\n                  src=\"./empty.svg\"\r\n                  alt=\"no events\"\r\n                  height={300}\r\n                  width={300}\r\n                />\r\n                <br />\r\n                <span>No events found</span>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AppContext } from \"../../context/context\";\r\nimport { loginUser } from \"../../context/actions/UserActions\";\r\n\r\nconst mockCredentials = {\r\n  username: \"Goosey\",\r\n  email: \"hack@hon.com\",\r\n  password: \"1234\",\r\n  type: \"hacker\",\r\n  profilePic: \"./hacker_pfp.svg\",\r\n};\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const { dispatch } = useContext(AppContext);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  // Update user state on login form input change\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      user.email === mockCredentials.email &&\r\n      user.password === mockCredentials.password\r\n    ) {\r\n      setLoginError(\"\");\r\n      dispatch(\r\n        loginUser({\r\n          username: mockCredentials.username,\r\n          email: mockCredentials.email,\r\n          type: \"hacker\",\r\n          profilePic: \"./hacker_pfp.svg\",\r\n        })\r\n      );\r\n      history.push(\"/\");\r\n    } else {\r\n      setLoginError(\"Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"login__wrapper\">\r\n      <div id=\"login__card\">\r\n        <img\r\n          src=\"./logo_1.svg\"\r\n          alt=\"logo\"\r\n          className=\"login__logo\"\r\n          width={150}\r\n          height={150}\r\n        />\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"text-input mb-4\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={user.email}\r\n            onChange={handleChange}\r\n            required\r\n          ></input>\r\n          <input\r\n            className=\"text-input mb-4\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n            required\r\n          ></input>\r\n          <Button variant=\"primary\" type=\"submit\" id=\"login__login-button\">\r\n            Log in\r\n          </Button>\r\n        </form>\r\n        <span id=\"login__span--error\">{loginError}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { TUserState, UserActions } from \"../types/UserTypes\";\r\n\r\nexport const loginUser = (user: TUserState) => ({\r\n  type: UserActions.LOGIN_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: UserActions.LOGOUT_USER,\r\n});\r\n","import { useContext } from \"react\";\r\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../context/actions/UserActions\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport { AppContext } from \"../../context/context\";\r\n\r\nconst SideNav = () => {\r\n  const {\r\n    state: { user },\r\n    dispatch,\r\n  } = useContext(AppContext);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const logOut = () => {\r\n    dispatch(logoutUser());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"side-nav__container\">\r\n        <img\r\n          src={\"./logo_1.svg\"}\r\n          alt=\"logo\"\r\n          className=\"login__logo\"\r\n          width={100}\r\n          height={100}\r\n        />\r\n        <img\r\n        src={user.profilePic}\r\n        alt=\"user profile\"\r\n        id=\"side-nav__img--pfp\"\r\n        />\r\n        <h1 id=\"side-nav__h1--username\">{user.username}</h1>\r\n        <Link to=\"/\">\r\n          <div\r\n            className={\r\n              location.pathname === \"/\" ? \"nav-link side-nav__nav-link--selected\" : \"nav-link\"\r\n            }\r\n          >\r\n            <img\r\n              src={\r\n                location.pathname === \"/\" ? \"./home_selected.svg\" : \"./home.svg\"\r\n              }\r\n              alt=\"home\"\r\n              className=\"side-nav__img--nav-icon\"\r\n            />\r\n            <span>Home</span>\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/events\">\r\n          <div\r\n            className={\r\n              location.pathname === \"/events\" ? \"nav-link side-nav__nav-link--selected\" : \"nav-link\"\r\n            }\r\n          >\r\n            <img\r\n              src={\r\n                location.pathname === \"/events\"\r\n                  ? \"./events_selected.svg\"\r\n                  : \"./events.svg\"\r\n              }\r\n              alt=\"events\"\r\n              className=\"side-nav__img--nav-icon\"\r\n            />\r\n            <span>Events</span>\r\n          </div>\r\n        </Link>\r\n        {user.type === \"public\" ? (\r\n          <div className=\"side-nav__div--account-action\">\r\n            <a href=\"#/login\">Log in</a> for full access to the Dashboard!\r\n          </div>\r\n        ) : (\r\n          <div className=\"side-nav__div--account-action\">\r\n            <p onClick={logOut} id=\"side-nav__p--logout\">\r\n              Log out\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        delay={{ show: 250, hide: 400 }}\r\n        transition={false}\r\n        overlay={\r\n          <Tooltip id=\"id\" placement=\"top\">\r\n            Don't forget to drink water!\r\n          </Tooltip>\r\n        }\r\n      >\r\n        {\r\n          <img\r\n            src=\"./drink_water.svg\"\r\n            alt=\"drink water\"\r\n            height={100}\r\n            width={100}\r\n            id=\"side-nav__img--drink-water\"\r\n          />\r\n        }\r\n      </OverlayTrigger>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import \"./styles/main.scss\";\r\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Events from \"./components/Events/Events\";\r\nimport Login from \"./components/Login/Login\";\r\nimport SideNav from \"./components/SideNav/SideNav\";\r\nimport { AppProvider } from \"./context/context\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppProvider>\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <div id=\"router-container\">\r\n                <SideNav />\r\n                <div id=\"page-window\">\r\n                  <Switch>\r\n                    <Route path=\"/events\">\r\n                      <Events />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                      <Home />\r\n                    </Route>\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n    </AppProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}