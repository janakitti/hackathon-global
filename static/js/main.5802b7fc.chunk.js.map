{"version":3,"sources":["context/types/UserTypes.tsx","context/reducers/UserReducer.tsx","context/context.tsx","components/Home/Home.tsx","components/Events/EventSearch/EventSearch.tsx","components/Events/EventFilter/EventFilter.tsx","components/Events/EventCard/EventCard.tsx","components/Events/Events.tsx","components/Login/Login.tsx","context/actions/UserActions.tsx","components/SideNav/SideNav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserActions","userReducer","state","action","type","LOGIN_USER","payload","LOGOUT_USER","username","email","profilePic","initialState","user","AppContext","createContext","dispatch","mainReducer","AppProvider","children","useReducer","Provider","value","Home","useContext","className","id","EventSearch","searchValue","setSearchValue","name","placeholder","onChange","event","target","required","EventFilter","imgUrl","color","setSelectedFilter","style","backgroundImage","onClick","generateEventTypeText","EventCard","eventsMap","presenterImgs","speakers","map","speaker","OverlayTrigger","placement","delay","show","hide","transition","overlay","Tooltip","profile_pic","src","slice","uuidv4","relatedPills","related_events","get","DateTime","fromMillis","start_time","monthShort","toUpperCase","day","event_type","toLocaleString","TIME_SIMPLE","end_time","description","Button","variant","href","public_url","private_url","Events","useState","events","setEvents","selectedFilter","eventCards","setEventCards","Map","setEventsMap","useEffect","fetch","then","res","json","data","forEach","prevState","set","filter","permission","sort","a","b","toLowerCase","includes","item","mockCredentials","Login","history","useHistory","password","setUser","loginError","setLoginError","handleChange","width","height","onSubmit","preventDefault","loginUser","push","SideNav","location","useLocation","to","pathname","App","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5802b7fc.chunk.js","sourcesContent":["type UserType = \"hacker\" | \"mentor\" | \"public\" | \"admin\";\r\n\r\nexport type TUserState = {\r\n  username: string;\r\n  email: string;\r\n  type: UserType;\r\n  profilePic: string;\r\n};\r\n\r\nexport enum UserActions {\r\n  LOGIN_USER = \"LOGIN_USER\",\r\n  LOGOUT_USER = \"LOGOUT_USER\",\r\n}\r\n\r\nexport type TUserActions = {\r\n  type: UserActions;\r\n  payload?: any;\r\n};\r\n","import { TUserState, UserActions, TUserActions } from \"../types/UserTypes\";\r\n\r\nexport const userReducer = (state: TUserState, action: TUserActions) => {\r\n  switch (action.type) {\r\n    case UserActions.LOGIN_USER:\r\n      return { ...action.payload };\r\n    case UserActions.LOGOUT_USER:\r\n      return {\r\n        username: \"Guest Hacker\",\r\n        email: \"\",\r\n        type: \"public\",\r\n        profilePic: \"/default_pfp.svg\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { TUserState } from \"./types/UserTypes\";\r\nimport { userReducer } from \"./reducers/UserReducer\";\r\n\r\ntype TStore = {\r\n  user: TUserState;\r\n};\r\n\r\nconst initialState: TStore = {\r\n  user: {\r\n    username: \"Guest Hacker\",\r\n    email: \"\",\r\n    type: \"public\",\r\n    profilePic: \"/default_pfp.svg\",\r\n  },\r\n};\r\n\r\nconst AppContext = createContext<{\r\n  state: TStore;\r\n  dispatch: React.Dispatch<any>;\r\n}>({\r\n  state: initialState,\r\n  dispatch: () => null,\r\n});\r\n\r\nconst mainReducer = ({ user }: TStore, action: any): TStore => ({\r\n  user: userReducer(user, action),\r\n});\r\n\r\nconst AppProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(mainReducer, initialState);\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"../../context/context\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    state: { user },\r\n  } = useContext(AppContext);\r\n  return (\r\n    <div className=\"dashboard__div--page\">\r\n      <div className=\"dashboard__div--inner-container\">\r\n        <div className=\"home__div--card\">\r\n          <h1 id=\"home__h1--welcome\">\r\n            {user.type === \"public\" ? \"Hey there,\" : \"Welcome back,\"}{\" \"}\r\n            {user.username} 👋\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","interface IEventSearchProps {\r\n  searchValue: string;\r\n  setSearchValue: (value: string) => void;\r\n}\r\n\r\nconst EventSearch: React.FC<IEventSearchProps> = ({\r\n  searchValue,\r\n  setSearchValue,\r\n}) => {\r\n  return (\r\n    <div id=\"event-search__div--card\">\r\n      <input\r\n        className=\"text-input\"\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Search events\"\r\n        value={searchValue}\r\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n          setSearchValue(event.target.value)\r\n        }\r\n        required\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventSearch;\r\n","import { TEventFilters } from \"../../../shared/EventTypes\";\r\n\r\ninterface IEventFilterProps {\r\n  name: string;\r\n  imgUrl: string;\r\n  color: string;\r\n  setSelectedFilter: () => void;\r\n}\r\n\r\nconst EventFilter: React.FC<IEventFilterProps> = ({\r\n  name,\r\n  imgUrl,\r\n  color,\r\n  setSelectedFilter,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"event-filter__div--filter-card\"\r\n      style={{\r\n        backgroundImage: `url(\"` + imgUrl + `\")`,\r\n      }}\r\n      onClick={setSelectedFilter}\r\n    >\r\n      <div className={`event-filter__div--filter-card-color ${color}`}>\r\n        {name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventFilter;\r\n","import { useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport { TEvent, TSpeaker, TEventType } from \"../../../shared/EventTypes\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { DateTime } from \"luxon\";\r\nimport { AppContext } from \"../../../context/context\";\r\n\r\ninterface IEventCardProps {\r\n  event: TEvent;\r\n  eventsMap: Map<number, string>;\r\n}\r\n\r\nconst generateEventTypeText = (type: TEventType) => {\r\n  switch (type) {\r\n    case \"workshop\":\r\n      return <h2 className=\"event-type event-card__h2--workshop\">WORKSHOP</h2>;\r\n    case \"activity\":\r\n      return <h2 className=\"event-type event-card__h2--activity\">ACTIVITY</h2>;\r\n    case \"tech_talk\":\r\n      return (\r\n        <h2 className=\"event-type event-card__h2--tech_talk\">TECH TALK</h2>\r\n      );\r\n    default:\r\n      return <h2 className=\"event-type event-card__h2--default\">EVENT</h2>;\r\n  }\r\n};\r\n\r\nconst EventCard: React.FC<IEventCardProps> = ({ event, eventsMap }) => {\r\n  const {\r\n    state: { user },\r\n  } = useContext(AppContext);\r\n  const presenterImgs = event.speakers.map((speaker: TSpeaker) => (\r\n    <OverlayTrigger\r\n      key={uuidv4()}\r\n      placement=\"bottom\"\r\n      delay={{ show: 250, hide: 400 }}\r\n      transition={false}\r\n      overlay={\r\n        <Tooltip id=\"id\" placement=\"top\">\r\n          {speaker.name}\r\n        </Tooltip>\r\n      }\r\n    >\r\n      {speaker.profile_pic ? (\r\n        <img src={speaker.profile_pic} className=\"presenter-pfp\" />\r\n      ) : (\r\n        <div className=\"presenter-pfp default-presenter-pfp\">\r\n          {speaker.name.slice(0, 1)}\r\n        </div>\r\n      )}\r\n    </OverlayTrigger>\r\n  ));\r\n\r\n  const relatedPills = event.related_events.map((id: number) => (\r\n    <div key={uuidv4()} className=\"related-pill\">\r\n      {eventsMap.get(id)}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"event-card\">\r\n      <div className=\"date-col\">\r\n        <div className=\"cal-container\">\r\n          <span className=\"cal-month\">\r\n            {DateTime.fromMillis(event.start_time).monthShort.toUpperCase()}\r\n          </span>\r\n          <span className=\"cal-date\">\r\n            {DateTime.fromMillis(event.start_time).day}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"details-col\">\r\n        {generateEventTypeText(event.event_type)}\r\n        <h1 className=\"event-title\">{event.name}</h1>\r\n        <h3 className=\"event-time\">\r\n          {DateTime.fromMillis(event.start_time).toLocaleString(\r\n            DateTime.TIME_SIMPLE\r\n          )}\r\n          {\" - \"}\r\n          {DateTime.fromMillis(event.end_time).toLocaleString(\r\n            DateTime.TIME_SIMPLE\r\n          )}\r\n        </h3>\r\n        <p className=\"event-desc\">{event.description}</p>\r\n        <div className=\"event-bottom-row\">{relatedPills}</div>\r\n        <div className=\"event-bottom-row\">\r\n          <div className=\"presenter-container\">{presenterImgs}</div>\r\n          <div className=\"attend-button-container\">\r\n            <Button\r\n              variant={event.event_type}\r\n              className=\"attend-button\"\r\n              href={\r\n                user.type === \"public\" ? event.public_url : event.private_url\r\n              }\r\n              target=\"_blank\"\r\n            >\r\n              Attend\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  TEndpointResponse,\r\n  TEvent,\r\n  TEventFilters,\r\n} from \"../../shared/EventTypes\";\r\nimport EventSearch from \"./EventSearch/EventSearch\";\r\nimport EventFilter from \"./EventFilter/EventFilter\";\r\nimport EventCard from \"./EventCard/EventCard\";\r\nimport { AppContext } from \"../../context/context\";\r\n\r\nconst Events = () => {\r\n  const {\r\n    state: { user },\r\n  } = useContext(AppContext);\r\n  const [events, setEvents] = useState<TEvent[]>([]);\r\n  const [selectedFilter, setSelectedFilter] = useState<TEventFilters>(\"all\");\r\n  const [eventCards, setEventCards] = useState<JSX.Element[]>();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [eventsMap, setEventsMap] = useState<Map<number, string>>(new Map());\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.hackthenorth.com/v3/graphql?query={ events { id name event_type permission start_time end_time description speakers { name profile_pic } public_url private_url related_events } }\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data: TEndpointResponse) => {\r\n        data.data.events.forEach((event: TEvent) =>\r\n          setEventsMap((prevState: Map<number, string>) => {\r\n            prevState.set(event.id, event.name);\r\n            return prevState;\r\n          })\r\n        );\r\n        setEvents(\r\n          data.data.events\r\n            .filter(\r\n              (event: TEvent) =>\r\n                (user.type === \"public\" && event.permission === \"public\") ||\r\n                user.type !== \"public\"\r\n            )\r\n            .sort((a: TEvent, b: TEvent) =>\r\n              a.start_time > b.start_time ? 1 : -1\r\n            )\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setEventCards(\r\n      events\r\n        .filter(\r\n          (event: TEvent) =>\r\n            selectedFilter === \"all\" || event.event_type === selectedFilter\r\n        )\r\n        .filter(\r\n          (event: TEvent) =>\r\n            event.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            event.description?.toLowerCase().includes(searchValue.toLowerCase())\r\n        )\r\n        .map((item: TEvent) => (\r\n          <EventCard key={item.id} event={item} eventsMap={eventsMap} />\r\n        ))\r\n    );\r\n  }, [events, selectedFilter, searchValue]);\r\n\r\n  return (\r\n    <div className=\"dashboard__div--page\">\r\n      <div className=\"dashboard__div--inner-container\">\r\n        <EventSearch\r\n          searchValue={searchValue}\r\n          setSearchValue={setSearchValue}\r\n        />\r\n        <div className=\"events__div--event-filter-container\">\r\n          <EventFilter\r\n            name=\"All Events\"\r\n            imgUrl=\"/all_events.svg\"\r\n            color=\"event-filter__div--all-events\"\r\n            setSelectedFilter={() => setSelectedFilter(\"all\")}\r\n          />\r\n          <EventFilter\r\n            name=\"Workshops\"\r\n            imgUrl=\"/workshops.svg\"\r\n            color=\"event-filter__div--workshops\"\r\n            setSelectedFilter={() => setSelectedFilter(\"workshop\")}\r\n          />\r\n          <EventFilter\r\n            name=\"Activities\"\r\n            imgUrl=\"/activities.svg\"\r\n            color=\"event-filter__div--activities\"\r\n            setSelectedFilter={() => setSelectedFilter(\"activity\")}\r\n          />\r\n          <EventFilter\r\n            name=\"Tech Talks\"\r\n            imgUrl=\"/tech_talks.svg\"\r\n            color=\"event-filter__div--tech-talks\"\r\n            setSelectedFilter={() => setSelectedFilter(\"tech_talk\")}\r\n          />\r\n        </div>\r\n        {eventCards}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AppContext } from \"../../context/context\";\r\nimport { loginUser } from \"../../context/actions/UserActions\";\r\n\r\nconst mockCredentials = {\r\n  username: \"Goosey\",\r\n  email: \"hack@hon.com\",\r\n  password: \"1234\",\r\n  type: \"hacker\",\r\n  profilePic: \"/hacker_pfp.svg\",\r\n};\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const { dispatch } = useContext(AppContext);\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      user.email === mockCredentials.email &&\r\n      user.password === mockCredentials.password\r\n    ) {\r\n      setLoginError(\"\");\r\n      dispatch(\r\n        loginUser({\r\n          username: mockCredentials.username,\r\n          email: mockCredentials.email,\r\n          type: \"hacker\",\r\n          profilePic: \"/hacker_pfp.svg\",\r\n        })\r\n      );\r\n      history.push(\"/\");\r\n    } else {\r\n      setLoginError(\"Invalid username or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"login__div--login-wrapper\">\r\n      <div id=\"login__div--login-card\">\r\n        <img\r\n          src=\"/logo_1.svg\"\r\n          className=\"login__h1--logo\"\r\n          width={150}\r\n          height={150}\r\n        />\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"text-input mb-4\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={user.email}\r\n            onChange={handleChange}\r\n            required\r\n          ></input>\r\n          <input\r\n            className=\"text-input mb-4\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n            required\r\n          ></input>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            id=\"login__span--login-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n        </form>\r\n        <span id=\"login__span--login-error\">{loginError}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { TUserState, UserActions } from \"../types/UserTypes\";\r\n\r\nexport const loginUser = (user: TUserState) => ({\r\n  type: UserActions.LOGIN_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: UserActions.LOGOUT_USER,\r\n});\r\n","import { useContext } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useLocation,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { logoutUser } from \"../../context/actions/UserActions\";\r\nimport { AppContext } from \"../../context/context\";\r\n\r\nconst SideNav = () => {\r\n  const {\r\n    state: { user },\r\n    dispatch,\r\n  } = useContext(AppContext);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const logOut = () => {\r\n    dispatch(logoutUser());\r\n    history.push(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"side-nav\">\r\n      <img\r\n        src={\"/logo_1.svg\"}\r\n        className=\"login__h1--logo\"\r\n        width={100}\r\n        height={100}\r\n      />\r\n      <img src={user.profilePic} id=\"side-nav__img--pfp\"></img>\r\n      <h1 id=\"side-nav__h1--username\">{user.username}</h1>\r\n      <Link to=\"/\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/\" ? \"nav-link selected\" : \"nav-link\"\r\n          }\r\n        >\r\n          <img\r\n            src={location.pathname === \"/\" ? \"/home_selected.svg\" : \"/home.svg\"}\r\n            className=\"side-nav__img--nav-icon\"\r\n          />\r\n          <span>Home</span>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/events\">\r\n        <div\r\n          className={\r\n            location.pathname === \"/events\" ? \"nav-link selected\" : \"nav-link\"\r\n          }\r\n        >\r\n          <img\r\n            src={\r\n              location.pathname === \"/events\"\r\n                ? \"/events_selected.svg\"\r\n                : \"/events.svg\"\r\n            }\r\n            className=\"side-nav__img--nav-icon\"\r\n          />\r\n          <span>Events</span>\r\n        </div>\r\n      </Link>\r\n      {user.type === \"public\" ? (\r\n        <div className=\"side-nav__div--account-action\">\r\n          <a href=\"/login\">Log in</a> to for full access to the Dashboard!\r\n        </div>\r\n      ) : (\r\n        <div className=\"side-nav__div--account-action\">\r\n          <a href=\"#\" onClick={logOut}>\r\n            Log out\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from \"react\";\r\nimport \"./styles/main.scss\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Events from \"./components/Events/Events\";\r\nimport Login from \"./components/Login/Login\";\r\nimport SideNav from \"./components/SideNav/SideNav\";\r\nimport { AppProvider } from \"./context/context\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppProvider>\r\n      <BrowserRouter basename=\"/hackathon-global\">\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Router>\r\n                  <div id=\"router-container\">\r\n                    <SideNav />\r\n                    <div id=\"page-window\">\r\n                      <Switch>\r\n                        <Route path=\"/events\">\r\n                          <Events />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                          <Home />\r\n                        </Route>\r\n                      </Switch>\r\n                    </div>\r\n                  </div>\r\n                </Router>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </BrowserRouter>\r\n    </AppProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}